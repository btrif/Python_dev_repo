#!/usr/bin/python3
# Solved by Bogdan Trif @ 2016-09-03 11:35
#The  Euler Project  https://projecteuler.net
'''Even Fibonacci numbers   -   Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
my_array=[]
my_array1=[]

def main():
    # some code is redundant here, I made adjustments

    a, b = 0, 1
    while b < 4000000:
        if (b%2 == 0):
            print(b, end=' ')
            my_array.append(b)
            a, b = b, a + b
            #print(b, 'is Divisible by 2')
        else:
            print(b, end=' ')
            a, b = b, a + b
    print('\n')

    #   better code, fewer lines, fewer computations
    a, b = 0, 1
    while b < 4000000:
        print(b, end=' ')
        a, b = b, a + b
        if (b%2 == 0):
            my_array1.append(b)
            #print(b, 'is Divisible by 2')
        else:
            continue


if __name__ == "__main__": main()

print('\n', my_array)
print('\n', my_array1)
print('the sum of the elements of the Fibonacci sequence to 4.000.000 of even terms is :', sum(my_array))
print('This prints only the last element of the array', my_array[-1])